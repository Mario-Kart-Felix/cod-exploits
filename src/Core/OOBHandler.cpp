#include "STDInclude.hpp"

#include "Network/Address.hpp"
#include "Network/Socket.hpp"

#include "Core/OOBHandler.hpp"

namespace Core
{
	OOBHandler::OOBHandler()
	{
		this->onCommand("challengeResponse", [](Network::Socket* sock, Network::Address address, std::string data)
		{
			sock->send(address, OOB_MAGIC "connect 182c2b93575ef526 \"\\cg_predictItems\\1\\cl_voice\\0\\rate\\25000\\snaps\\30\\name\\Snake\\natType\\1\\rank\\69\\prestige\\10\\protocol\\149\\checksum\\-1740007858\\challenge\\" + std::string(data.data()) + "\\statver\\159 2074144879\\invited\\0\\xuid\\182c2b93575ef526\\steamid\\575ef526182c2b93\\qport\\0\\onlineStats\\0\\migrating\\0\"");
		});

		this->onCommand("connectResponse", [this](Network::Socket* sock, Network::Address address, std::string data)
		{
			printf("Connection is ready!\n");
			if (this->readyHandler)
			{
				this->readyHandler(sock, address);
			}

			//sock->send(address, OOB_MAGIC "disconnect");
		});
	}

	bool OOBHandler::handle(Network::Socket* sock, Network::Address address, std::string_view data)
	{
		if (std::memcmp(data.data(), OOB_MAGIC, 4)) return false;

		std::string buffer(data.begin() + 4, data.end());
		auto pos = buffer.find_first_of(" \n");
		Utils::String command = buffer;
		if (pos != std::string::npos)
		{
			command = buffer.substr(0, pos);
			buffer = buffer.substr(pos + 1);
		}
		else
		{
			command = std::string(buffer.data());
			buffer = "";
		}

		auto handler = this->commandHandlers.find(command.toLower());
		if (handler != this->commandHandlers.end())
		{
			handler->second(sock, address, buffer);
		}

		return true;
	}

	void OOBHandler::onCommand(std::string command, Utils::Slot<void(Network::Socket*, Network::Address, std::string data)> callback)
	{
		this->commandHandlers[Utils::String(command).toLower()] = callback;
	}

	void OOBHandler::connect(Network::Socket* sock, Network::Address addr, Utils::Slot<void(Network::Socket*, Network::Address)> callback)
	{
		this->readyHandler = callback;
		sock->send(addr, OOB_MAGIC "getChallenge 0 \"182c2b93575ef526\"");
	}
}
